{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport queryString from 'querystring'; // import moment from './moment-buddhist'\n// import addressData from '../static/data/address_data.json'\n// moment.locale('th')\n\nexport var isPassword = function isPassword(value) {\n  var upperRegex = /[A-Z]+/;\n  var lowerRegex = /[a-z]+/;\n  var alphabetRegex = /[0-9]+/;\n  var scopeCharactorRegex = /^[A-Za-z0-9@#]+$/;\n  return upperRegex.test(value) && lowerRegex.test(value) && alphabetRegex.test(value) && scopeCharactorRegex.test(value);\n};\nexport var isPasswordNoon = function isPasswordNoon(value) {\n  var length = 6;\n  return value.length >= length;\n}; // export const getThaiDate = date => {\n//   const d = new Date(date)\n//   d.setFullYear(parseInt(d.getFullYear()) + 543)\n//   return moment(d).format('ll')\n// }\n\nexport var isNull = function isNull(value) {\n  return value === undefined || value === null;\n};\nexport var isEmpty = function isEmpty(value) {\n  return value === '' || value instanceof Object && _Object$keys(value).length === 0;\n};\nexport var isBlank = function isBlank(value) {\n  return isNull(value) || isEmpty(value);\n};\nexport var isPresent = function isPresent(value) {\n  return !isBlank(value);\n};\nexport var isPhoneNumber = function isPhoneNumber(value) {\n  var s = value;\n\n  if (!value) {\n    return value;\n  }\n\n  if (s.length < 10) {\n    return false;\n  }\n\n  var reg = /0[896][0-9]{8}/;\n  return reg.test(s);\n};\nvar emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport var isEmail = function isEmail(value) {\n  return emailRegex.test(value);\n};\nvar intOrFloatRegex = /[+-]?[0-9][0-9]*/;\nexport var isNumber = function isNumber(value) {\n  return intOrFloatRegex.test(value);\n}; // export const generateAddressStructure = addressData => {\n//   var obj = []\n//   addressData.map((province, i) =>\n//     province[1].map((district, j) =>\n//       district[1].map((subDistrict, k) =>\n//         subDistrict[1].map((postcode, l) => {\n//           var newObj = {\n//             value: {\n//               province: province[0],\n//               district: district[0],\n//               subDistrict: subDistrict[0],\n//               postcode: `${postcode}`,\n//             },\n//             label: `${province[0]} >> ${district[0]} >> ${\n//               subDistrict[0]\n//             } >> ${postcode}`,\n//           }\n//           obj.push(newObj)\n//         }),\n//       ),\n//     ),\n//   )\n//   return obj\n// }\n// export const addressStructure = generateAddressStructure(addressData)\n\nexport var displayNumber = function displayNumber(value) {\n  var nums = ('' + value).split('.');\n  var onlyNums = nums[0].replace(/[^-\\d]/g, '');\n  var rgx = /(\\d+)(\\d{3})/;\n  var x1 = onlyNums;\n\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n\n  if (nums.length > 1) x1 = x1 + '.' + nums[1];\n  return x1;\n};\nexport var lessThan = function lessThan(value, maxValue) {\n  var nums = ('' + value).split('.');\n  var onlyNums = nums[0].replace(/[^\\d]/g, '');\n  var NewOnlyNums;\n  if (onlyNums <= maxValue) NewOnlyNums = onlyNums;else NewOnlyNums = maxValue.toString();\n  var rgx = /(\\d+)(\\d{3})/;\n  var x1 = NewOnlyNums;\n\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n\n  if (nums.length > 1) x1 = x1 + '.' + nums[1];\n  return x1;\n};\nexport var inRange = function inRange(a, b) {\n  return function (value, previousValue) {\n    if (!value) {\n      return a;\n    }\n\n    if (_parseFloat(value) < a) {\n      return a;\n    }\n\n    if (_parseFloat(value) > b) {\n      return b;\n    }\n\n    var x1 = (!isNaN(_parseFloat(value)) ? _parseFloat(value) : value) + '';\n    return x1;\n  };\n};\nexport var validId = function validId() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  if (id.length !== 13) return false;\n  var checksum = id.split('').reduce(function (mem, _char, i) {\n    if (i !== 12) {\n      return mem + _parseInt(_char) * (13 - i);\n    } else return mem;\n  }, 0);\n  checksum = (11 - checksum % 11) % 10;\n  return checksum === _parseInt(id[12]);\n};\nexport var hiddenPhoneFormatter = function hiddenPhoneFormatter(number) {\n  if (!number) return ''; // NNN-NNN-NNNN\n\n  var splitter = /.{1,3}/g;\n  var hidden = /.{1,6}/;\n  number = number.replace(/[^\\d|^X]/g, '');\n  if (number === '') return '';\n  number = number.substring(0, 10);\n  var arrayN = number.split('');\n\n  var replaceX = function replaceX(collectX) {\n    return collectX + 'X';\n  };\n\n  var collectArray = arrayN.reduce(replaceX, '');\n  number = number.replace(hidden, collectArray.substring(0, 6));\n  return number.substring(0, 7).match(splitter).join('-') + number.substring(7);\n};\nexport var creditCardFormatter = function creditCardFormatter(number) {\n  var pattern = 'XXXX-XXXX-XXXX-XXXX';\n  return formatter(pattern, number);\n}; // Parser\n\nexport var formatParser = function formatParser(string) {\n  return string ? string.replace(/-/g, '') : '';\n};\nexport var numberParser = function numberParser(string) {\n  return _parseFloat(string ? string.replace(/,/g, '') : '');\n};\nexport var dateParser = function dateParser(string) {\n  return string ? string.replace(/\\//g, '') : '';\n}; // Formatter\n\nexport var idFormatter = function idFormatter(number) {\n  if (!number) return ''; // I-IIII-IIIII-II-I\n\n  number = number.replace(/[^\\d]/g, '');\n  if (number === '') return '';\n  var pattern = 'X-XXXX-XXXXX-XX-X';\n  return formatter(pattern, number);\n};\nexport var ThaiDateFormatter = function ThaiDateFormatter(date) {\n  if (!date) return '';\n  date = date.replace(/[^\\d]/g, '');\n  if (date === '') return '';\n  var pattern = 'XX/XX/XXXX';\n  return formatter(pattern, date);\n};\nexport var phoneFormatter = function phoneFormatter(number) {\n  if (!number) return ''; // NNN-NNN-NNNN\n\n  var splitter = /.{1,3}/g;\n  number = number.replace(/[^\\d]/g, '');\n  if (number === '') return '';\n  number = number.substring(0, 10);\n  return number.substring(0, 7).match(splitter).join('-') + number.substring(7);\n};\nexport var formatter = function formatter() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var number = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return pattern.split('').reduce(function (mem, c) {\n    if (number.length < mem.i + 1) {\n      return mem;\n    }\n\n    if (c === 'X') return {\n      i: mem.i + 1,\n      result: mem.result += number[mem.i]\n    };else {\n      return {\n        i: mem.i,\n        result: mem.result += c\n      };\n    }\n  }, {\n    i: 0,\n    result: ''\n  }).result;\n};\nexport var onlyEng = function onlyEng(value, previousValue) {\n  var eng = /^[a-zA-Z]*$/;\n  if (eng.test(value)) return value;\n  return previousValue;\n};\nexport var onlyThai = function onlyThai(value, previousValue) {\n  var eng = /^[ก-ฮะาิีึ์ุูโเแ์ำัฯืฺไใาๆ่้๊๋็]*$/;\n  if (eng.test(value)) return value;\n  return previousValue;\n}; // export const getAge = birthdate =>\n//   moment().diff(\n//     typeof birthdate === 'string' && birthdate\n//       ? moment(birthdate, 'DD-MM-BBBB')\n//       : birthdate,\n//     'years',\n//   )\n\nexport var getValueFormOptions = function getValueFormOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var value = arguments.length > 1 ? arguments[1] : undefined;\n  var selected = options.find(function (o) {\n    return o.value === value;\n  });\n  if (selected) return selected.label;\n  return '';\n};\nexport var url2Obj = function url2Obj(params) {\n  return queryString.parse(params);\n};\nexport var obj2Url = function obj2Url(params) {\n  return queryString.stringify(params);\n};\nexport var normalizeDate = function normalizeDate(value) {\n  return value;\n};\nexport var filterObj = function filterObj() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return _Object$keys(object).filter(function (key) {\n    return filter.includes(key);\n  }).reduce(function (obj, key) {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n};\nexport var removefilterObj = function removefilterObj() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return _Object$keys(object).filter(function (key) {\n    return !filter.includes(key);\n  }).reduce(function (obj, key) {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n};\nexport var convertNaNtoZero = function convertNaNtoZero(arg) {\n  return isNaN(_parseInt(arg)) ? 0 : _parseInt(arg);\n};","map":{"version":3,"sources":["D:\\project\\next-v-9\\core\\helper.js"],"names":["queryString","isPassword","value","upperRegex","lowerRegex","alphabetRegex","scopeCharactorRegex","test","isPasswordNoon","length","isNull","undefined","isEmpty","Object","isBlank","isPresent","isPhoneNumber","s","reg","emailRegex","isEmail","intOrFloatRegex","isNumber","displayNumber","nums","split","onlyNums","replace","rgx","x1","lessThan","maxValue","NewOnlyNums","toString","inRange","a","b","previousValue","isNaN","validId","id","checksum","reduce","mem","char","i","hiddenPhoneFormatter","number","splitter","hidden","substring","arrayN","replaceX","collectX","collectArray","match","join","creditCardFormatter","pattern","formatter","formatParser","string","numberParser","dateParser","idFormatter","ThaiDateFormatter","date","phoneFormatter","c","result","onlyEng","eng","onlyThai","getValueFormOptions","options","selected","find","o","label","url2Obj","params","parse","obj2Url","stringify","normalizeDate","filterObj","object","filter","key","includes","obj","removefilterObj","convertNaNtoZero","arg"],"mappings":"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","sourcesContent":["import queryString from 'querystring'\r\n// import moment from './moment-buddhist'\r\n\r\n// import addressData from '../static/data/address_data.json'\r\n\r\n// moment.locale('th')\r\n\r\nexport const isPassword = value => {\r\n  const upperRegex = /[A-Z]+/\r\n  const lowerRegex = /[a-z]+/\r\n  const alphabetRegex = /[0-9]+/\r\n  const scopeCharactorRegex = /^[A-Za-z0-9@#]+$/\r\n  return (\r\n    upperRegex.test(value) &&\r\n    lowerRegex.test(value) &&\r\n    alphabetRegex.test(value) &&\r\n    scopeCharactorRegex.test(value)\r\n  )\r\n}\r\n\r\nexport const isPasswordNoon = value => {\r\n  const length = 6\r\n  return value.length >= length\r\n}\r\n\r\n// export const getThaiDate = date => {\r\n//   const d = new Date(date)\r\n//   d.setFullYear(parseInt(d.getFullYear()) + 543)\r\n//   return moment(d).format('ll')\r\n// }\r\n\r\nexport const isNull = value => value === undefined || value === null\r\n\r\nexport const isEmpty = value =>\r\n  value === '' || (value instanceof Object && Object.keys(value).length === 0)\r\nexport const isBlank = value => isNull(value) || isEmpty(value)\r\nexport const isPresent = value => !isBlank(value)\r\n\r\nexport const isPhoneNumber = value => {\r\n  var s = value\r\n\r\n  if (!value) {\r\n    return value\r\n  }\r\n\r\n  if (s.length < 10) {\r\n    return false\r\n  }\r\n\r\n  const reg = /0[896][0-9]{8}/\r\n  return reg.test(s)\r\n}\r\n\r\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nexport const isEmail = value => emailRegex.test(value)\r\n\r\nconst intOrFloatRegex = /[+-]?[0-9][0-9]*/\r\nexport const isNumber = value => intOrFloatRegex.test(value)\r\n\r\n// export const generateAddressStructure = addressData => {\r\n//   var obj = []\r\n//   addressData.map((province, i) =>\r\n//     province[1].map((district, j) =>\r\n//       district[1].map((subDistrict, k) =>\r\n//         subDistrict[1].map((postcode, l) => {\r\n//           var newObj = {\r\n//             value: {\r\n//               province: province[0],\r\n//               district: district[0],\r\n//               subDistrict: subDistrict[0],\r\n//               postcode: `${postcode}`,\r\n//             },\r\n//             label: `${province[0]} >> ${district[0]} >> ${\r\n//               subDistrict[0]\r\n//             } >> ${postcode}`,\r\n//           }\r\n//           obj.push(newObj)\r\n//         }),\r\n//       ),\r\n//     ),\r\n//   )\r\n//   return obj\r\n// }\r\n\r\n// export const addressStructure = generateAddressStructure(addressData)\r\n\r\nexport const displayNumber = value => {\r\n  let nums = ('' + value).split('.')\r\n  const onlyNums = nums[0].replace(/[^-\\d]/g, '')\r\n  let rgx = /(\\d+)(\\d{3})/\r\n  let x1 = onlyNums\r\n  while (rgx.test(x1)) {\r\n    x1 = x1.replace(rgx, '$1' + ',' + '$2')\r\n  }\r\n  if (nums.length > 1) x1 = x1 + '.' + nums[1]\r\n  return x1\r\n}\r\n\r\nexport const lessThan = (value, maxValue) => {\r\n  var nums = ('' + value).split('.')\r\n  const onlyNums = nums[0].replace(/[^\\d]/g, '')\r\n  let NewOnlyNums\r\n  if (onlyNums <= maxValue) NewOnlyNums = onlyNums\r\n  else NewOnlyNums = maxValue.toString()\r\n  var rgx = /(\\d+)(\\d{3})/\r\n  var x1 = NewOnlyNums\r\n  while (rgx.test(x1)) {\r\n    x1 = x1.replace(rgx, '$1' + ',' + '$2')\r\n  }\r\n  if (nums.length > 1) x1 = x1 + '.' + nums[1]\r\n  return x1\r\n}\r\n\r\nexport const inRange = (a, b) => (value, previousValue) => {\r\n  if (!value) {\r\n    return a\r\n  }\r\n  if (parseFloat(value) < a) {\r\n    return a\r\n  }\r\n  if (parseFloat(value) > b) {\r\n    return b\r\n  }\r\n  var x1 = (!isNaN(parseFloat(value)) ? parseFloat(value) : value) + ''\r\n  return x1\r\n}\r\n\r\nexport const validId = (id = '') => {\r\n  if (id.length !== 13) return false\r\n  var checksum = id.split('').reduce((mem, char, i) => {\r\n    if (i !== 12) {\r\n      return mem + parseInt(char) * (13 - i)\r\n    } else return mem\r\n  }, 0)\r\n  checksum = (11 - (checksum % 11)) % 10\r\n  return checksum === parseInt(id[12])\r\n}\r\n\r\nexport const hiddenPhoneFormatter = number => {\r\n  if (!number) return ''\r\n  // NNN-NNN-NNNN\r\n  const splitter = /.{1,3}/g\r\n  const hidden = /.{1,6}/\r\n  number = number.replace(/[^\\d|^X]/g, '')\r\n  if (number === '') return ''\r\n  number = number.substring(0, 10)\r\n  const arrayN = number.split('')\r\n  const replaceX = collectX => collectX + 'X'\r\n  const collectArray = arrayN.reduce(replaceX, '')\r\n  number = number.replace(hidden, collectArray.substring(0, 6))\r\n\r\n  return (\r\n    number\r\n      .substring(0, 7)\r\n      .match(splitter)\r\n      .join('-') + number.substring(7)\r\n  )\r\n}\r\n\r\nexport const creditCardFormatter = number => {\r\n  const pattern = 'XXXX-XXXX-XXXX-XXXX'\r\n  return formatter(pattern, number)\r\n}\r\n\r\n// Parser\r\n\r\nexport const formatParser = string => (string ? string.replace(/-/g, '') : '')\r\nexport const numberParser = string =>\r\n  parseFloat(string ? string.replace(/,/g, '') : '')\r\n\r\nexport const dateParser = string => (string ? string.replace(/\\//g, '') : '')\r\n\r\n// Formatter\r\n\r\nexport const idFormatter = number => {\r\n  if (!number) return ''\r\n  // I-IIII-IIIII-II-I\r\n  number = number.replace(/[^\\d]/g, '')\r\n  if (number === '') return ''\r\n\r\n  const pattern = 'X-XXXX-XXXXX-XX-X'\r\n  return formatter(pattern, number)\r\n}\r\n\r\nexport const ThaiDateFormatter = date => {\r\n  if (!date) return ''\r\n\r\n  date = date.replace(/[^\\d]/g, '')\r\n  if (date === '') return ''\r\n\r\n  const pattern = 'XX/XX/XXXX'\r\n  return formatter(pattern, date)\r\n}\r\n\r\nexport const phoneFormatter = number => {\r\n  if (!number) return ''\r\n  // NNN-NNN-NNNN\r\n  const splitter = /.{1,3}/g\r\n  number = number.replace(/[^\\d]/g, '')\r\n  if (number === '') return ''\r\n  number = number.substring(0, 10)\r\n  return (\r\n    number\r\n      .substring(0, 7)\r\n      .match(splitter)\r\n      .join('-') + number.substring(7)\r\n  )\r\n}\r\n\r\nexport const formatter = (pattern = '', number = '') => {\r\n  return pattern.split('').reduce(\r\n    (mem, c) => {\r\n      if (number.length < mem.i + 1) {\r\n        return mem\r\n      }\r\n      if (c === 'X')\r\n        return {\r\n          i: mem.i + 1,\r\n          result: (mem.result += number[mem.i]),\r\n        }\r\n      else {\r\n        return {\r\n          i: mem.i,\r\n          result: (mem.result += c),\r\n        }\r\n      }\r\n    },\r\n    { i: 0, result: '' },\r\n  ).result\r\n}\r\n\r\nexport const onlyEng = (value, previousValue) => {\r\n  const eng = /^[a-zA-Z]*$/\r\n  if (eng.test(value)) return value\r\n  return previousValue\r\n}\r\n\r\nexport const onlyThai = (value, previousValue) => {\r\n  const eng = /^[ก-ฮะาิีึ์ุูโเแ์ำัฯืฺไใาๆ่้๊๋็]*$/\r\n  if (eng.test(value)) return value\r\n  return previousValue\r\n}\r\n\r\n// export const getAge = birthdate =>\r\n//   moment().diff(\r\n//     typeof birthdate === 'string' && birthdate\r\n//       ? moment(birthdate, 'DD-MM-BBBB')\r\n//       : birthdate,\r\n//     'years',\r\n//   )\r\n\r\nexport const getValueFormOptions = (options = [], value) => {\r\n  const selected = options.find(o => o.value === value)\r\n  if (selected) return selected.label\r\n  return ''\r\n}\r\n\r\nexport const url2Obj = params => queryString.parse(params)\r\nexport const obj2Url = params => queryString.stringify(params)\r\n\r\nexport const normalizeDate = value => {\r\n  return value\r\n}\r\n\r\nexport const filterObj = (object = {}, filter = []) =>\r\n  Object.keys(object)\r\n    .filter(key => filter.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = object[key]\r\n      return obj\r\n    }, {})\r\n\r\nexport const removefilterObj = (object = {}, filter = []) =>\r\n  Object.keys(object)\r\n    .filter(key => !filter.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = object[key]\r\n      return obj\r\n    }, {})\r\n\r\nexport const convertNaNtoZero = arg =>\r\n  isNaN(parseInt(arg)) ? 0 : parseInt(arg)\r\n"]},"metadata":{},"sourceType":"module"}