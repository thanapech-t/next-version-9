{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport createSagaMiddleware from 'redux-saga';\nimport { all } from 'redux-saga/effects';\nimport auth, { authWatcher } from './auth';\nvar saga = createSagaMiddleware();\nexport var reducers = combineReducers({\n  form: formReducer,\n  auth: auth\n});\nvar store = createStore(reducers, applyMiddleware(saga));\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([authWatcher()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nsaga.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["D:\\project\\next-v-9\\ducks\\index.js"],"names":["rootSaga","createStore","combineReducers","applyMiddleware","reducer","formReducer","createSagaMiddleware","all","auth","authWatcher","saga","reducers","form","store","run"],"mappings":";;;;yBAcUA,Q;;AAdV,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,YAArC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AAEA,OAAOC,IAAP,IAAcC,WAAd,QAAgC,QAAhC;AAEA,IAAMC,IAAI,GAAGJ,oBAAoB,EAAjC;AACA,OAAO,IAAMK,QAAQ,GAAGT,eAAe,CAAC;AACtCU,EAAAA,IAAI,EAAEP,WADgC;AAEtCG,EAAAA,IAAI,EAAJA;AAFsC,CAAD,CAAhC;AAIP,IAAMK,KAAK,GAAGZ,WAAW,CAACU,QAAD,EAAWR,eAAe,CAACO,IAAD,CAA1B,CAAzB;;AAEA,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,GAAG,CAAC,CAACE,WAAW,EAAZ,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAC,IAAI,CAACI,GAAL,CAASd,QAAT;AAEA,eAAea,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {all} from 'redux-saga/effects'\r\n\r\nimport auth, {authWatcher} from './auth'\r\n\r\nconst saga = createSagaMiddleware()\r\nexport const reducers = combineReducers({\r\n  form: formReducer,\r\n  auth,\r\n})\r\nconst store = createStore(reducers, applyMiddleware(saga))\r\n\r\nfunction* rootSaga() {\r\n  yield all([authWatcher()])\r\n}\r\n\r\nsaga.run(rootSaga)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}