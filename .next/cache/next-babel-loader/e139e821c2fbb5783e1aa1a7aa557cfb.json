{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserInfoSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logoutSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authWatcher);\n\nimport { put, takeLatest, delay } from 'redux-saga/effects';\nimport { createReducer, Creator } from '../helper';\nvar SET_DATA_AUTH = 'SET_DATA_AUTH';\nvar GET_DATA_AUTH = 'GET_DATA_AUTH';\nvar LOGIN = 'LOGIN';\nvar LOGOUT = 'LOGOUT';\nexport var setDataUser = Creator(SET_DATA_AUTH, 'data');\nexport var getUserInfo = Creator(GET_DATA_AUTH);\nexport var login = Creator(LOGIN, 'data');\nexport var logout = Creator(LOGOUT);\nexport function getUserInfoSaga() {\n  var checkToken;\n  return _regeneratorRuntime.wrap(function getUserInfoSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          checkToken = sessionStorage.getItem('loginPlayground');\n\n          if (!checkToken) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 5;\n          return put(setDataUser({\n            isLogin: true\n          }));\n\n        case 5:\n          _context.next = 9;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n          _context.prev = 9;\n          _context.next = 12;\n          return put(setDataUser({\n            initialized: true\n          }));\n\n        case 12:\n          return _context.finish(9);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7, 9, 13]]);\n}\nexport function loginSaga(_ref) {\n  var data;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          data = _ref.payload.data;\n          _context2.prev = 1;\n          sessionStorage.setItem('loginPlayground', true);\n          _context2.next = 5;\n          return put(setDataUser({\n            user: {\n              id: data.id\n            },\n            isLogin: true\n          }));\n\n        case 5:\n          _context2.next = 9;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](1);\n\n        case 9:\n          _context2.prev = 9;\n          _context2.next = 12;\n          return put(setDataUser({\n            isLoading: false\n          }));\n\n        case 12:\n          return _context2.finish(9);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 7, 9, 13]]);\n}\nexport function logoutSaga() {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          sessionStorage.clear();\n          _context3.next = 4;\n          return put(setDataUser({\n            isLogin: false\n          }));\n\n        case 4:\n          _context3.next = 8;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.next = 11;\n          return put(setDataUser({\n            isLoading: false\n          }));\n\n        case 11:\n          return _context3.finish(8);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6, 8, 12]]);\n}\nexport function authWatcher() {\n  return _regeneratorRuntime.wrap(function authWatcher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_DATA_AUTH, getUserInfoSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(LOGIN, loginSaga);\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(LOGOUT, logoutSaga);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nvar initial = {\n  user: {},\n  initialized: false,\n  isLogin: false,\n  isLoading: false,\n  routes: []\n};\nvar reducer = createReducer(initial, function (state) {\n  return _defineProperty({}, SET_DATA_AUTH, function (_ref2) {\n    var data = _ref2.data;\n    return _objectSpread({}, state, data);\n  });\n});\nexport default reducer;","map":{"version":3,"sources":["D:\\project\\next-v-9\\ducks\\auth\\index.js"],"names":["getUserInfoSaga","loginSaga","logoutSaga","authWatcher","put","takeLatest","delay","createReducer","Creator","SET_DATA_AUTH","GET_DATA_AUTH","LOGIN","LOGOUT","setDataUser","getUserInfo","login","logout","checkToken","sessionStorage","getItem","isLogin","initialized","data","payload","setItem","user","id","isLoading","clear","initial","routes","reducer","state"],"mappings":"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","sourcesContent":["import { put, takeLatest, delay } from 'redux-saga/effects'\r\nimport { createReducer, Creator } from '../helper'\r\n\r\nconst SET_DATA_AUTH = 'SET_DATA_AUTH'\r\nconst GET_DATA_AUTH = 'GET_DATA_AUTH'\r\nconst LOGIN = 'LOGIN'\r\nconst LOGOUT = 'LOGOUT'\r\n\r\nexport const setDataUser = Creator(SET_DATA_AUTH, 'data')\r\nexport const getUserInfo = Creator(GET_DATA_AUTH)\r\nexport const login = Creator(LOGIN, 'data')\r\nexport const logout = Creator(LOGOUT)\r\n\r\nexport function* getUserInfoSaga() {\r\n  try {\r\n    const checkToken = sessionStorage.getItem('loginPlayground')\r\n    if (checkToken) {\r\n      yield put(setDataUser({ isLogin: true }))\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    yield put(setDataUser({ initialized: true }))\r\n  }\r\n}\r\n\r\nexport function* loginSaga({ payload: { data } }) {\r\n  try {\r\n    sessionStorage.setItem('loginPlayground', true)\r\n    yield put(setDataUser({ user: { id: data.id }, isLogin: true }))\r\n  } catch (error) {\r\n  } finally {\r\n    yield put(\r\n      setDataUser({\r\n        isLoading: false,\r\n      }),\r\n    )\r\n  }\r\n}\r\n\r\nexport function* logoutSaga() {\r\n  try {\r\n    sessionStorage.clear()\r\n    yield put(setDataUser({ isLogin: false }))\r\n  } catch (error) {\r\n  } finally {\r\n    yield put(\r\n      setDataUser({\r\n        isLoading: false,\r\n      }),\r\n    )\r\n  }\r\n}\r\n\r\nexport function* authWatcher() {\r\n  yield takeLatest(GET_DATA_AUTH, getUserInfoSaga)\r\n  yield takeLatest(LOGIN, loginSaga)\r\n  yield takeLatest(LOGOUT, logoutSaga)\r\n}\r\n\r\nconst initial = {\r\n  user: {},\r\n  initialized: false,\r\n  isLogin: false,\r\n  isLoading: false,\r\n  routes: [],\r\n}\r\n\r\nconst reducer = createReducer(initial, state => ({\r\n  [SET_DATA_AUTH]: ({ data }) => ({\r\n    ...state,\r\n    ...data,\r\n  }),\r\n}))\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}