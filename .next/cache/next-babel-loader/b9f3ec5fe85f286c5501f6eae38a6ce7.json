{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\project\\\\next-v-9\\\\components\\\\share\\\\Field\\\\index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Field } from 'redux-form';\nimport { compose } from 'recompose';\nimport TextInput from './TextInput';\nimport Password from './Password';\nimport TextArea from './TextArea';\nvar Container = styled.div.withConfig({\n  displayName: \"Field__Container\",\n  componentId: \"sc-8fa67f-0\"\n})([\"width:100%;margin:0 auto 24px;\"]);\nvar Label = styled.label.withConfig({\n  displayName: \"Field__Label\",\n  componentId: \"sc-8fa67f-1\"\n})([\"\"]);\nvar ErrorContainer = styled.div.withConfig({\n  displayName: \"Field__ErrorContainer\",\n  componentId: \"sc-8fa67f-2\"\n})([\"\"]);\nvar ErrorText = styled.span.withConfig({\n  displayName: \"Field__ErrorText\",\n  componentId: \"sc-8fa67f-3\"\n})([\"color:red;padding-left:5px;\"]);\n\nvar TypeRenderer = function TypeRenderer(type, props) {\n  switch (type) {\n    case 'text':\n      return React.createElement(TextInput, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n\n    case 'password':\n      return React.createElement(Password, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n\n    case 'textarea':\n      return React.createElement(TextArea, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n\n    default:\n      break;\n  }\n};\n\nvar FieldRenderer = function FieldRenderer(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"className\", \"label\"]);\n\n  var type = props.type,\n      hideError = props.hideError,\n      _props$meta = props.meta,\n      error = _props$meta.error,\n      touched = _props$meta.touched,\n      asyncError = props.asyncError;\n  return React.createElement(Container, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, label && React.createElement(Label, {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, label), TypeRenderer(type, props), !hideError && touched && (error || asyncError) && React.createElement(ErrorContainer, {\n    className: \"error-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ErrorText, {\n    className: \"error\",\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, error || asyncError)));\n};\n\nvar CustomField = function CustomField(props) {\n  return React.createElement(Field, _extends({}, props, {\n    component: FieldRenderer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nvar enhancer = compose();\nexport default enhancer(CustomField);","map":{"version":3,"sources":["D:\\project\\next-v-9\\components\\share\\Field\\index.js"],"names":["React","styled","Field","compose","TextInput","Password","TextArea","Container","div","Label","label","ErrorContainer","ErrorText","span","TypeRenderer","type","props","FieldRenderer","className","hideError","meta","error","touched","asyncError","CustomField","enhancer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,sCAAf;AAKA,IAAMC,KAAK,GAAGR,MAAM,CAACS,KAAV;AAAA;AAAA;AAAA,QAAX;AAEA,IAAMC,cAAc,GAAGV,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,QAApB;AAEA,IAAMI,SAAS,GAAGX,MAAM,CAACY,IAAV;AAAA;AAAA;AAAA,mCAAf;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACpC,UAAQD,IAAR;AACE,SAAK,MAAL;AACE,aAAO,oBAAC,SAAD,eAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACF,SAAK,UAAL;AACE,aAAO,oBAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACF,SAAK,UAAL;AACE,aAAO,oBAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACF;AACE;AARJ;AAUD,CAXD;;AAaA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoC;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBR,KAAsB,QAAtBA,KAAsB;AAAA,MAAZM,KAAY;;AAAA,MAEtDD,IAFsD,GAMpDC,KANoD,CAEtDD,IAFsD;AAAA,MAGtDI,SAHsD,GAMpDH,KANoD,CAGtDG,SAHsD;AAAA,oBAMpDH,KANoD,CAItDI,IAJsD;AAAA,MAI9CC,KAJ8C,eAI9CA,KAJ8C;AAAA,MAIvCC,OAJuC,eAIvCA,OAJuC;AAAA,MAKtDC,UALsD,GAMpDP,KANoD,CAKtDO,UALsD;AAOxD,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAA1B,CADZ,EAEGI,YAAY,CAACC,IAAD,EAAOC,KAAP,CAFf,EAGG,CAACG,SAAD,IAAcG,OAAd,KAA0BD,KAAK,IAAIE,UAAnC,KACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAA6B,IAAA,IAAI,EAAER,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,IAAIE,UADZ,CADF,CAJJ,CADF;AAaD,CApBD;;AAsBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAR,KAAK;AAAA,SAAI,oBAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,SAAS,EAAEC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAzB;;AAEA,IAAMQ,QAAQ,GAAGtB,OAAO,EAAxB;AAEA,eAAesB,QAAQ,CAACD,WAAD,CAAvB","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Field } from 'redux-form'\r\nimport { compose } from 'recompose'\r\n\r\nimport TextInput from './TextInput'\r\nimport Password from './Password'\r\nimport TextArea from './TextArea'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto 24px;\r\n`\r\n\r\nconst Label = styled.label``\r\n\r\nconst ErrorContainer = styled.div``\r\n\r\nconst ErrorText = styled.span`\r\n  color: red;\r\n  padding-left: 5px;\r\n`\r\n\r\nconst TypeRenderer = (type, props) => {\r\n  switch (type) {\r\n    case 'text':\r\n      return <TextInput {...props} />\r\n    case 'password':\r\n      return <Password {...props} />\r\n    case 'textarea':\r\n      return <TextArea {...props} />\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nconst FieldRenderer = ({ className, label, ...props }) => {\r\n  const {\r\n    type,\r\n    hideError,\r\n    meta: { error, touched },\r\n    asyncError,\r\n  } = props\r\n  return (\r\n    <Container className={className}>\r\n      {label && <Label className=\"label\">{label}</Label>}\r\n      {TypeRenderer(type, props)}\r\n      {!hideError && touched && (error || asyncError) && (\r\n        <ErrorContainer className=\"error-container\">\r\n          <ErrorText className=\"error\" type={type}>\r\n            {error || asyncError}\r\n          </ErrorText>\r\n        </ErrorContainer>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst CustomField = props => <Field {...props} component={FieldRenderer} />\r\n\r\nconst enhancer = compose()\r\n\r\nexport default enhancer(CustomField)\r\n"]},"metadata":{},"sourceType":"module"}