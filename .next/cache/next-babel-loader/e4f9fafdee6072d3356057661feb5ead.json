{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserInfoSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logoutSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(authWatcher);\n\nimport { put, takeLatest, delay } from 'redux-saga/effects';\nimport { createReducer, Creator } from '../helper';\nimport axios from 'axios';\nvar SET_DATA_AUTH = 'SET_DATA_AUTH';\nvar GET_DATA_AUTH = 'GET_DATA_AUTH';\nvar LOGIN = 'LOGIN';\nvar LOGOUT = 'LOGOUT';\nexport var setDataUser = Creator(SET_DATA_AUTH, 'data');\nexport var getUserInfo = Creator(GET_DATA_AUTH);\nexport var login = Creator(LOGIN, 'data');\nexport var logout = Creator(LOGOUT);\nexport function getUserInfoSaga() {\n  var checkToken, response;\n  return _regeneratorRuntime.wrap(function getUserInfoSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          checkToken = sessionStorage.getItem('twittee');\n          _context.next = 4;\n          return axios.get('/api/auth', {\n            params: {\n              token: checkToken\n            }\n          });\n\n        case 4:\n          response = _context.sent;\n\n          if (!checkToken) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return put(setDataUser({\n            user: response.data,\n            isLogin: true\n          }));\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('getUserInfoSaga error', _context.t0);\n\n        case 13:\n          _context.prev = 13;\n          _context.next = 16;\n          return put(setDataUser({\n            initialized: true\n          }));\n\n        case 16:\n          return _context.finish(13);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10, 13, 17]]);\n}\nexport function loginSaga(_ref) {\n  var data, response;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          data = _ref.payload.data;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return axios.post('/api/auth', data);\n\n        case 4:\n          response = _context2.sent;\n          sessionStorage.setItem('twittee', response.data.token);\n          _context2.next = 8;\n          return put(setDataUser({\n            user: response.data,\n            isLogin: true\n          }));\n\n        case 8:\n          _context2.next = 21;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.t1 = _context2.t0.response.status;\n          _context2.next = _context2.t1 === 401 ? 15 : 18;\n          break;\n\n        case 15:\n          _context2.next = 17;\n          return put(setDataUser({\n            errorMessage: 'email or password is incorrect'\n          }));\n\n        case 17:\n          return _context2.abrupt(\"break\", 21);\n\n        case 18:\n          _context2.next = 20;\n          return put(setDataUser({\n            errorMessage: 'server has been down'\n          }));\n\n        case 20:\n          return _context2.abrupt(\"break\", 21);\n\n        case 21:\n          _context2.prev = 21;\n          _context2.next = 24;\n          return put(setDataUser({\n            isLoading: false\n          }));\n\n        case 24:\n          return _context2.finish(21);\n\n        case 25:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10, 21, 25]]);\n}\nexport function logoutSaga() {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          sessionStorage.clear();\n          _context3.next = 4;\n          return put(setDataUser({\n            isLogin: false\n          }));\n\n        case 4:\n          _context3.next = 8;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.next = 11;\n          return put(setDataUser({\n            isLoading: false\n          }));\n\n        case 11:\n          return _context3.finish(8);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6, 8, 12]]);\n}\nexport function authWatcher() {\n  return _regeneratorRuntime.wrap(function authWatcher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_DATA_AUTH, getUserInfoSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(LOGIN, loginSaga);\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(LOGOUT, logoutSaga);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nvar initial = {\n  user: {},\n  initialized: false,\n  isLogin: false,\n  isLoading: false,\n  errorMessage: ''\n};\nvar reducer = createReducer(initial, function (state) {\n  return _defineProperty({}, SET_DATA_AUTH, function (_ref2) {\n    var data = _ref2.data;\n    return _objectSpread({}, state, data);\n  });\n});\nexport default reducer;","map":{"version":3,"sources":["D:\\project\\next-v-9\\ducks\\auth\\index.js"],"names":["getUserInfoSaga","loginSaga","logoutSaga","authWatcher","put","takeLatest","delay","createReducer","Creator","axios","SET_DATA_AUTH","GET_DATA_AUTH","LOGIN","LOGOUT","setDataUser","getUserInfo","login","logout","checkToken","sessionStorage","getItem","get","params","token","response","user","data","isLogin","console","log","initialized","payload","post","setItem","status","errorMessage","isLoading","clear","initial","reducer","state"],"mappings":"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","sourcesContent":["import { put, takeLatest, delay } from 'redux-saga/effects'\r\nimport { createReducer, Creator } from '../helper'\r\nimport axios from 'axios'\r\n\r\nconst SET_DATA_AUTH = 'SET_DATA_AUTH'\r\nconst GET_DATA_AUTH = 'GET_DATA_AUTH'\r\nconst LOGIN = 'LOGIN'\r\nconst LOGOUT = 'LOGOUT'\r\n\r\nexport const setDataUser = Creator(SET_DATA_AUTH, 'data')\r\nexport const getUserInfo = Creator(GET_DATA_AUTH)\r\nexport const login = Creator(LOGIN, 'data')\r\nexport const logout = Creator(LOGOUT)\r\n\r\nexport function* getUserInfoSaga() {\r\n  try {\r\n    const checkToken = sessionStorage.getItem('twittee')\r\n    const response = yield axios.get('/api/auth', {\r\n      params: {\r\n        token: checkToken,\r\n      },\r\n    })\r\n\r\n    if (checkToken) {\r\n      yield put(setDataUser({ user: response.data, isLogin: true }))\r\n    }\r\n  } catch (error) {\r\n    console.log('getUserInfoSaga error', error)\r\n  } finally {\r\n    yield put(setDataUser({ initialized: true }))\r\n  }\r\n}\r\n\r\nexport function* loginSaga({ payload: { data } }) {\r\n  try {\r\n    const response = yield axios.post('/api/auth', data)\r\n    sessionStorage.setItem('twittee', response.data.token)\r\n    yield put(setDataUser({ user: response.data, isLogin: true }))\r\n  } catch (error) {\r\n    switch (error.response.status) {\r\n      case 401:\r\n        yield put(\r\n          setDataUser({ errorMessage: 'email or password is incorrect' }),\r\n        )\r\n        break\r\n      default:\r\n        yield put(setDataUser({ errorMessage: 'server has been down' }))\r\n        break\r\n    }\r\n  } finally {\r\n    yield put(\r\n      setDataUser({\r\n        isLoading: false,\r\n      }),\r\n    )\r\n  }\r\n}\r\n\r\nexport function* logoutSaga() {\r\n  try {\r\n    sessionStorage.clear()\r\n    yield put(setDataUser({ isLogin: false }))\r\n  } catch (error) {\r\n  } finally {\r\n    yield put(\r\n      setDataUser({\r\n        isLoading: false,\r\n      }),\r\n    )\r\n  }\r\n}\r\n\r\nexport function* authWatcher() {\r\n  yield takeLatest(GET_DATA_AUTH, getUserInfoSaga)\r\n  yield takeLatest(LOGIN, loginSaga)\r\n  yield takeLatest(LOGOUT, logoutSaga)\r\n}\r\n\r\nconst initial = {\r\n  user: {},\r\n  initialized: false,\r\n  isLogin: false,\r\n  isLoading: false,\r\n  errorMessage: '',\r\n}\r\n\r\nconst reducer = createReducer(initial, state => ({\r\n  [SET_DATA_AUTH]: ({ data }) => ({\r\n    ...state,\r\n    ...data,\r\n  }),\r\n}))\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}